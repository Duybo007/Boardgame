

name: Java CI with Maven

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:

  compile:
    runs-on: self-hosted

    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven
    - name: Build with Maven
      run: mvn compile

  security-check:
    runs-on: self-hosted
    needs: compile

    steps:
    - uses: actions/checkout@v4
    - name: Trivy FS Scan
      run: trivy fs --format table -o fs.report.json .

    - name: gitleaks Installation
      run: sudo apt install gitleaks -y
    - name: Gitleaks Code Scan
      run: gitleaks detect source . -r gitleaks-report.json -f json

  test:
    runs-on: self-hosted
    needs: security-check
    
    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven
    - name: Test with Maven
      run: mvn test

  build_project_and_sonar_scan:
    runs-on: self-hosted
    needs: test
    
    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven
    - name: Build Project
      run: mvn package
    - name: Upload JAR artifact
      uses: actions/upload-artifact@v4
      with:
        name: app-jar
        path: target/*.jar
    
    - uses: actions/checkout@v4
      with:
        # Disabling shallow clones is recommended for improving the relevancy of reporting
        fetch-depth: 0
    - name: SonarQube Scan
      uses: SonarSource/sonarqube-scan-action@v5.2.0 # Ex: v4.1.0, See the latest version at https://github.com/marketplace/actions/official-sonarqube-scan
      env:
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}

    - name: SonarQube Quality Gate check
      id: sonarqube-quality-gate-check
      uses: sonarsource/sonarqube-quality-gate-action@master
      with:
         pollingTimeoutSec: 600
      env:
         SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
         SONAR_HOST_URL: ${{ vars.SONAR_HOST_URL }}

  build_docker_image_and_push:
    runs-on: self-hosted
    needs: build_project_and_sonar_scan
    
    steps:
    - uses: actions/checkout@v4
    - name: Download JAR artifact
      uses: actions/download-artifact@v4
      with:
        name: app-jar
        path: target

    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v3
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    - name: Build and Push Docker image
      uses: docker/build-push-action@v6
      with:
        context: .
        push: true
        tags: |
          duybo95/boardgame:latest
          duybo95/boardgame:${{ github.run_number }}
        file: ./Dockerfile

  update_docker_image_tag:
    runs-on: self-hosted
    needs: build_docker_image_and_push
    
    steps:
      - name: Checkout deployment repo
        uses: actions/checkout@v4
        with:
          repository: Duybo007/gitops-boardgame
          token: ${{ secrets.DEPLOYMENT_REPO_TOKEN }} 
          path: deployment-repo
      
      - name: Update deployment.yaml image tag
        run: |
          sed -i "s|image: duybo95/boardgame:.*|image: duybo95/boardgame:${{ github.run_number }}|" deployment-repo/deployment.yaml
      
      - name: Commit and push update
        run: |
          cd deployment-repo
          git config user.name "github-actions"
          git config user.email "github-actions@github.com"
          git add deployment.yaml
          git commit -m "Update image tag to ${{ github.run_number }}"
          git push
  # build:

  #   runs-on: self-hosted

  #   steps:
  #   - uses: actions/checkout@v4
  #   - name: Set up JDK 17
  #     uses: actions/setup-java@v3
  #     with:
  #       java-version: '17'
  #       distribution: 'temurin'
  #       cache: maven
  #   - name: Build with Maven
  #     run: mvn -B package --file pom.xml

  #   - name: Trivy FS scan
  #     run: |
  #       trivy fs --format table -o fs.html .

  #   - name: SonarQube Scan
  #     uses: sonarsource/sonarqube-scan-action@master
  #     env:
  #       SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
  #       SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}

  #   - name: SonarQube Quality Gate check
  #     id: sonarqube-quality-gate-check
  #     uses: sonarsource/sonarqube-quality-gate-action@master
  #     # Force to fail step after specific time.
  #     timeout-minutes: 5
  #     env:
  #      SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
  #      SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}

  #   - name: Set up QEMU
  #     uses: docker/setup-qemu-action@v3

  #   - name: Set up Docker Buildx
  #     uses: docker/setup-buildx-action@v3

  #   - name: Build Docker Image
  #     run: |
  #       docker build -t adijaiswal/boardgame:latest .

  #   - name: Trivy Image Scan
  #     run: |
  #       trivy image --format table -o trivy-image-report.html adijaiswal/board:latest
    
  #   - name: Login to Docker Hub
  #     uses: docker/login-action@v3
  #     with:
  #       username: ${{ secrets.DOCKERHUB_USERNAME }}
  #       password: ${{ secrets.DOCKERHUB_TOKEN }}

  #   - name: Push Docker Image
  #     run: |
  #         docker push adijaiswal/boardgame:latest




